{"version":3,"sources":["todo/Menu.js","todo/Base.js","todo/Tasks.js","todo/Home.js","todo/Addtask.js","todo/Router.js","index.js"],"names":["withRouter","class","to","Base","Title","Description","className","children","Tasks","taskss","JSON","parse","localStorage","getItem","map","task","index","key","type","value","taskname","onClick","id","i","newTodosList","splice","undefined","window","setItem","stringify","deleteTask","Home","role","Addtask","useState","description","error","loading","startdate","enddate","values","setValues","list","setList","useEffect","handleChange","name","event","target","onSubmit","preventDefault","newtask","Date","now","x","push","y","saveTask","onChange","Routes","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.824bd45e.chunk.js","sourcesContent":["import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\n\n\nconst Menu = () => {\n\n    return (\n        <div>\n       \n        <ul class=\"nav-tabs bg-dark\">\n <div class=\"row\">\n <col-2>\n      <li class=\"nav-item float-left\">\n        <Link class=\"nav-link text-white\" to=\"/\">Home</Link>\n      </li>\n      </col-2>\n    <col-4>\n      <li class=\"nav-item\">\n        <Link class=\"nav-link text-white text-center\" to=\"/tasks\">Tasks</Link>\n      </li>\n      </col-4>\n      <col-4>\n      <li class=\"nav-item\">\n        <Link class=\"nav-link text-white text-center\" to=\"/add/task\">Add New Task</Link>\n      </li>\n      </col-4>\n\n      <col-2>\n      <li class=\"nav-item float-left\">\n        <Link class=\"nav-link text-white\" to=\"/login\">Login</Link>\n      </li>\n      </col-2>\n\n </div>\n  \n </ul>\n\n        </div>\n    )\n}\n\nexport default withRouter(Menu);","import React from 'react'\nimport Menu from '../todo/Menu'\n\n\nconst Base = (\n   { Title= \"My title\",\n    Description= \"my description\",\n    className = \"bg-dark\",\n    children\n   }) => {\n\n    return(\n       <div>\n           <div className=\"container-fluid\">\n               <Menu />\n            <div className=\"jumbotron bg-dark text-white text-center\">\n    <h3 className=\"display-3\">{Title}</h3>\n        <div className={className}>\n            {children}\n        </div>\n            </div>\n           </div>\n       </div>\n    )\n}\n\n\nexport default Base;","import React, {useState} from 'react';\nimport Base from '../todo/Base'\nimport './tasks.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport  flipMove from 'react-flip-move'\n\n\nconst Tasks = () => {\n\n         \n        const  taskss = JSON.parse(localStorage.getItem('todos'))\n     \n\n   \n       const findIndex = (list,id) => {\n\n        const index = list.findIndex((todo, index) => { \n        \n            return todo.id === id\n        })\n      return index;\n    }\n\n    const deleteTodo = (list, i) => {\n     \n        const newList = list.splice(i, 1)\n        return newList;\n    }\n\n    const deleteTask = (id, taskss) =>  {\n       // e.preventDefault();\n\n     const newTodosList =   deleteTodo(taskss, id)\n \n     if(typeof window !== undefined) {\n        localStorage.setItem('todos', JSON.stringify(newTodosList));\n        taskss = newTodosList;\n       \n     } \n\n    }\n\n\n\n    return (\n        <Base\n        \n        className=\"container\"\n        Title=\"Tasks\">\n       {taskss  ?  <ul className=\"list-group\">\n        {taskss.map((task, index) => {\n            return(\n                <li key={index}>{\n                  \n                <input className=\"todo\" type=\"text\" value={task.taskname}></input>\n                }\n                \n                <span>\n                \n              <button className=\"btn btn-danger btn-sm dlt\" onClick={()=> { deleteTask(index, taskss)}}>Delete</button>\n              \n                </span>\n                </li>\n                \n            )\n        }) }\n        </ul> : <p>No tasks to display, add tasks..</p>}\n       \n     </Base>  \n    )\n\n\n}\n\n\nexport default Tasks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Base from '../todo/Base';\n\n\nconst Home = () => {\n\n\n\n    return(\n        <Base className=\"container\">\n            \n            <h1 className=\"display-3\">Welcome to React-Todo</h1>\n            <p className=\"lead\">U have a thought then its now or never ...!</p>\n            <hr className=\"my-2\"/>\n            <p>Procasination is the first step of failure to wounders come true, So let not be in the loop by scheduling the tasks...</p>\n            <p class=\"lead\">\n                <Link className=\"btn btn-primary btn-lg\" to=\"/add/task\" role=\"button\">Add Task</Link>\n            </p>\n        </Base>\n        \n        )\n}\n\n\nexport default Home;\n\n","import React, { useState,useEffect} from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport Base from '../todo/Base';\nimport Tasks from './Tasks';\n\nconst Addtask = () => {\n\nconst [values, setValues]= useState({\n        taskname : \"\",\n        description : \"\",\n        error : false,\n        loading : false,\n        startdate: \"\",\n        enddate: \"\"\n})\n\nconst [list, setList] = useState([]);\n\nconst {taskname, description, error, loading, startdate, enddate} = values\n\n\n\nconst saveTask = () => {\n   \n  let newtask = {\n       taskname,\n       startdate,\n       enddate,\n       id : Date.now()\n   } \n\n\n   if(typeof window !== undefined ) {\n            \n    if(localStorage.getItem('todos') == null) {\n       let x = [];\n       x.push(newtask)\n      localStorage.setItem('todos', JSON.stringify(x))\n       \n    \n    }else{\n        let y = [];\n           y = JSON.parse(localStorage.getItem('todos'));\n           y.push(newtask)\n         localStorage.setItem('todos',JSON.stringify(y))\n      \n   }\n   setList([...list, newtask])\n   \n}\n\n\n \n   //setList({list:[list, newtask] })\n \n\n\n\n}\n\n\n   useEffect(()=> {\n     \n     //console.log('eff',JSON.parse(localStorage.getItem('todos')))\n     //console.log(list)\n    setValues({\n        taskname : \"\",\n        description : \"\",\n        error : false,\n        loading : false,\n        startdate: \"\",\n        enddate: \"\"\n    })\n\n    },[list]) \n \n    \n//\nconst handleChange = name => (event) => {\n    setValues({...values,\n        [name] : event.target.value,\n        error: false,\n        loading: true,\n        \n    })\n}\n\nconst onSubmit = (event) => {\nevent.preventDefault();\nsaveTask()\n\n\n}\n\n\n\n\nconst addTaskForm = () => {\n\n  \n    return(\n        \n        <div className=\"container\">\n            \n            <div className=\"col-md-6 offset-sm-3 text-left\">\n                <div className=\"form-group\">\n                <label className=\"text-light\">Task Name</label>\n                <input className=\"form-control\" type=\"text\"\n                            onChange={handleChange(\"taskname\")} value={taskname}\n                            />\n              </div>\n                \n              <div className=\"form-group\">\n                <label className=\"text-light\">Description</label>\n                    <input className=\"form-control\" \n                    value={description} \n                    onChange={handleChange(\"description\")} \n                    type=\"text-area\" />\n              </div>\n\n              <div className=\"form-group\">\n                  <label className=\"text-light p-2\">Start-Date</label>\n                <input className=\"form-control\" onChange={handleChange(\"startdate\")} value={startdate} type=\"Date\"/>\n                <label className=\"text-light p-2\">End-Date</label>\n                <input className=\"form-control\" onChange={handleChange(\"enddate\")} value={enddate} type=\"Date\"/>\n              </div>\n                \n              <button className=\"bbtn btn-primary btn-lg btn-block\" onClick={onSubmit}>Submit</button>\n            </div>\n        </div>\n    )\n}\n\n\n\n    return(\n\n        <Base \n        Title=\"Add New Task\">\n     \n        {addTaskForm()}\n\n        </Base>\n    )\n}\n\n\nexport default Addtask;","import React from 'react';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Tasks from '../todo/Tasks';\nimport Home from './Home';\nimport Addtask from './Addtask';\n\n\n\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n        <Switch>\n           <Route path=\"/\" exact component={Home}/>\n           <Route path=\"/tasks\" exact component={Tasks}/>\n           <Route path=\"/add/task\" exact component={Addtask}/>\n        </Switch>\n        </BrowserRouter>\n    )\n}\n\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport Routes from './todo/Router';\n\n\nReactDOM.render(<Routes />,document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}